"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[474],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,s=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=u(n),f=i,m=d["".concat(c,".").concat(f)]||d[f]||l[f]||s;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=n.length,o=new Array(s);o[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:i,o[1]=a;for(var u=2;u<s;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4575:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>u});var r=n(7462),i=(n(7294),n(3905));const s={sidebar_position:8},o="requestSubscription",a={unversionedId:"api-reference/methods/request-subscription",id:"api-reference/methods/request-subscription",title:"requestSubscription",description:"Request a purchase for a subscription.",source:"@site/docs/api-reference/methods/request-subscription.md",sourceDirName:"api-reference/methods",slug:"/api-reference/methods/request-subscription",permalink:"/docs/api-reference/methods/request-subscription",draft:!1,editUrl:"https://github.com/dooboolab/react-native-iap/edit/main/docs/docs/api-reference/methods/request-subscription.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"requestPurchase",permalink:"/docs/api-reference/methods/request-purchase"},next:{title:"finishTransaction",permalink:"/docs/api-reference/methods/finish-transaction"}},c={},u=[{value:"Signature",id:"signature",level:2},{value:"Usage",id:"usage",level:2}],p={toc:u};function l(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"requestsubscription"},(0,i.kt)("inlineCode",{parentName:"h1"},"requestSubscription")),(0,i.kt)("p",null,"Request a purchase for a subscription."),(0,i.kt)("p",null,"The response will be received through the ",(0,i.kt)("inlineCode",{parentName:"p"},"PurchaseUpdatedListener"),"."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"andDangerouslyFinishTransactionAutomatically")," defaults to false. We recommend\nalways keeping at false, and verifying the transaction receipts on the server-side.")),(0,i.kt)("h2",{id:"signature"},"Signature"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"requestSubscription(\n  /** The product's sku/ID */\n  sku,\n\n  /**\n   * You should set this to false and call finishTransaction manually when you have delivered the purchased goods to the user.\n   * @default false\n   **/\n  andDangerouslyFinishTransactionAutomaticallyIOS = false,\n\n  /** purchaseToken that the user is upgrading or downgrading from (Android). */\n  purchaseTokenAndroid,\n\n  /** UNKNOWN_SUBSCRIPTION_UPGRADE_DOWNGRADE_POLICY, IMMEDIATE_WITH_TIME_PRORATION, IMMEDIATE_AND_CHARGE_PRORATED_PRICE, IMMEDIATE_WITHOUT_PRORATION, DEFERRED */\n  prorationModeAndroid = -1,\n\n  /** Specifies an optional obfuscated string that is uniquely associated with the user's account in your app. */\n  obfuscatedAccountIdAndroid,\n\n  /** Specifies an optional obfuscated string that is uniquely associated with the user's profile in your app. */\n  obfuscatedProfileIdAndroid,\n\n  /** The purchaser's user ID */\n  applicationUsername,\n): Promise<SubscriptionPurchase>\n")),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import React, {useCallback} from 'react';\nimport {Button} from 'react-native';\nimport {\n  requestSubscription,\n  Product,\n  Sku,\n  getSubscriptions,\n} from 'react-native-iap';\n\nconst App = () => {\n  const subscriptions = useCallback(\n    async () => getSubscriptions(['com.example.subscription']),\n    [],\n  );\n\n  const handlePurchase = async (sku: Sku) => {\n    await requestSubscription({sku});\n  };\n\n  return (\n    <>\n      {subscriptions.map((subscription) => (\n        <Button\n          key={subscription.productId}\n          title=\"Buy subscription\"\n          onPress={() => handlePurchase(subscription.productId)}\n        />\n      ))}\n    </>\n  );\n};\n")))}l.isMDXComponent=!0}}]);